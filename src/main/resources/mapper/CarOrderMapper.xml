<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ucucs.rental.dao.CarOrderMapper">
  <resultMap id="BaseResultMap" type="com.ucucs.rental.entity.CarOrder">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="stock_id" jdbcType="INTEGER" property="stockId" />
    <result column="rent_price" jdbcType="DECIMAL" property="rentPrice" />
    <result column="deposit" jdbcType="DECIMAL" property="deposit" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="rental_from" jdbcType="TIMESTAMP" property="rentalFrom" />
    <result column="rental_to" jdbcType="TIMESTAMP" property="rentalTo" />
    <result column="order_status" jdbcType="TINYINT" property="orderStatus" />
    <result column="pay_status" jdbcType="BIT" property="payStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, user_id, stock_id, rent_price, deposit, total_price, rental_from, rental_to, 
    order_status, pay_status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from car_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from car_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ucucs.rental.entity.CarOrder">
    <selectKey keyProperty="orderId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into car_order (user_id, stock_id, rent_price, 
      deposit, total_price, rental_from, 
      rental_to, order_status, pay_status, 
      create_time, update_time)
    values (#{userId,jdbcType=INTEGER}, #{stockId,jdbcType=INTEGER}, #{rentPrice,jdbcType=DECIMAL}, 
      #{deposit,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL}, #{rentalFrom,jdbcType=TIMESTAMP}, 
      #{rentalTo,jdbcType=TIMESTAMP}, #{orderStatus,jdbcType=TINYINT}, #{payStatus,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ucucs.rental.entity.CarOrder">
    <selectKey keyProperty="orderId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into car_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="stockId != null">
        stock_id,
      </if>
      <if test="rentPrice != null">
        rent_price,
      </if>
      <if test="deposit != null">
        deposit,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="rentalFrom != null">
        rental_from,
      </if>
      <if test="rentalTo != null">
        rental_to,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="stockId != null">
        #{stockId,jdbcType=INTEGER},
      </if>
      <if test="rentPrice != null">
        #{rentPrice,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null">
        #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="rentalFrom != null">
        #{rentalFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="rentalTo != null">
        #{rentalTo,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ucucs.rental.entity.CarOrder">
    update car_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="stockId != null">
        stock_id = #{stockId,jdbcType=INTEGER},
      </if>
      <if test="rentPrice != null">
        rent_price = #{rentPrice,jdbcType=DECIMAL},
      </if>
      <if test="deposit != null">
        deposit = #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="rentalFrom != null">
        rental_from = #{rentalFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="rentalTo != null">
        rental_to = #{rentalTo,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ucucs.rental.entity.CarOrder">
    update car_order
    set user_id = #{userId,jdbcType=INTEGER},
      stock_id = #{stockId,jdbcType=INTEGER},
      rent_price = #{rentPrice,jdbcType=DECIMAL},
      deposit = #{deposit,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      rental_from = #{rentalFrom,jdbcType=TIMESTAMP},
      rental_to = #{rentalTo,jdbcType=TIMESTAMP},
      order_status = #{orderStatus,jdbcType=TINYINT},
      pay_status = #{payStatus,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>